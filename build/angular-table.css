.angular-table {
  overflow-x: hidden;
  overflow-y: hidden;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-user-select: none;
}
.angular-table .flex {
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
}
.angular-table-header {
  border-bottom: 1px solid #eee;
  overflow: hidden;
  font-weight: bold;
  background-color: #fafafa;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
}
.angular-table-header-center {
  overflow: hidden;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
  border-right: 1px solid #eee;
}
.angular-table-cell {
  padding: 0 8px;
  border-right: 1px solid #eee;
  overflow: hidden;
}
.angular-table-cell .icon {
  opacity: 0.5;
  margin: 2px;
}
.angular-table-cell .icon:hover {
  opacity: 0.8;
}
.angular-table-header-cell {
  padding-left: 0;
  padding-right: 4px;
}
.angular-table-header-cell .angular-table-header-cell-content {
  padding-left: 8px;
  padding-right: 4px;
}
.angular-table-header-cell.resizable {
  cursor: e-resize;
}
.angular-table-header-cell.resizable .angular-table-header-cell-content {
  border-right: 1px solid #eee;
  cursor: default;
}
.angular-table-header-cell.resizing {
  background: #ddd;
}
.angular-table-header-cell.resizing .angular-table-header-cell-content {
  background-color: #fcfcfc;
}
.angular-table-body {
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
}
.angular-table-header-left,
.angular-table-header-right {
  overflow: hidden;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
}
.angular-table-header-right .angular-table-header-cell:nth-last-child(1) {
  cursor: default;
}
.angular-table-header-center {
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
  overflow: hidden;
}
.angular-table-body-left,
.angular-table-body-right {
  overflow: hidden;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
}
.angular-table-body-center {
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
  position: relative;
  overflow: hidden;
}
.angular-table-body-cell {
  border-bottom: 1px solid #eee;
}
.angular-table-body-cell.hover {
  background-color: #fcfcfc;
}
.angular-table-body-cell.selected {
  background-color: #5bc0de;
  color: white;
}

/*# sourceMappingURL=data:application/json;base64, */